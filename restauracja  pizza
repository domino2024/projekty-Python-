from flask import Flask, request, redirect, url_for, session

app = Flask(__name__)
app.secret_key = 'tajny_klucz'

sizes = {
    "ma≈Ça": {"cm": 32, "base_price": 20},
    "≈õrednia": {"cm": 46, "base_price": 24},
    "du≈ºa": {"cm": 60, "base_price": 29}
}

menu = [
    {"id": 1, "name": "Margherita", "ingredients": ["sos pomidorowy", "ser"]},
    {"id": 2, "name": "Pepperoni", "ingredients": ["sos pomidorowy", "ser", "pepperoni"]},
    {"id": 3, "name": "Hawajska", "ingredients": ["sos pomidorowy", "ser", "szynka", "ananas"]},
    {"id": 4, "name": "Capricciosa", "ingredients": ["sos pomidorowy", "ser", "szynka", "pieczarki"]},
    {"id": 5, "name": "Vegetariana", "ingredients": ["sos pomidorowy", "ser", "papryka", "cebula", "oliwki"]},
    {"id": 6, "name": "Diavola", "ingredients": ["sos pomidorowy", "ser", "salami", "chili"]},
    {"id": 7, "name": "Funghi", "ingredients": ["sos pomidorowy", "ser", "pieczarki"]},
    {"id": 8, "name": "Quattro Formaggi", "ingredients": ["mozzarella", "gorgonzola", "parmezan", "ricotta"]},
    {"id": 9, "name": "Prosciutto", "ingredients": ["sos pomidorowy", "ser", "szynka parme≈Ñska"]},
    {"id": 10, "name": "Tonno", "ingredients": ["sos pomidorowy", "ser", "tu≈Ñczyk", "cebula"]},
    {"id": 11, "name": "BBQ Chicken", "ingredients": ["sos BBQ", "kurczak", "ser", "cebula", "kukurydza"]},
    {"id": 12, "name": "Mexicana", "ingredients": ["sos pomidorowy", "ser", "fasola", "jalape√±o", "wo≈Çowina"]},
    {"id": 13, "name": "Salami", "ingredients": ["sos pomidorowy", "ser", "salami"]},
    {"id": 14, "name": "Spinaci", "ingredients": ["sos ≈õmietanowy", "szpinak", "feta", "czosnek"]},
    {"id": 15, "name": "Carbonara", "ingredients": ["sos ≈õmietanowy", "bekon", "ser", "jajko"]},
    {"id": 16, "name": "Frutti di Mare", "ingredients": ["sos pomidorowy", "ser", "krewetki", "kalmary", "ma≈Ç≈ºe"]},
    {"id": 17, "name": "Cztery Pory Roku", "ingredients": ["sos pomidorowy", "ser", "szynka", "grzyby", "karczochy", "oliwki"]},
    {"id": 18, "name": "Parmigiana", "ingredients": ["sos pomidorowy", "bak≈Ça≈ºan", "parmezan", "bazylia"]},
    {"id": 19, "name": "Boscaiola", "ingredients": ["sos pomidorowy", "ser", "grzyby", "boczek"]},
    {"id": 20, "name": "Calzone", "ingredients": ["sos pomidorowy", "ser", "szynka", "pieczarki"]}
]

STYLE = """
<style>
    body { background-color: white; color: red; font-family: Arial; padding: 20px; }
    h1, h2 { color: red; }
    .form { margin-bottom: 20px; }
    .button { background-color: red; color: white; padding: 5px 15px; border: none; cursor: pointer; }
    .button:hover { background-color: darkred; }
    .order { border-top: 2px solid red; margin-top: 30px; padding-top: 20px; }
</style>
"""

def calculate_price(pizza, size_key):
    base = sizes[size_key]["base_price"]
    return base + len(pizza["ingredients"])

@app.route('/', methods=['GET', 'POST'])
def index():
    if "order" not in session:
        session["order"] = []
    if "client" not in session:
        session["client"] = {}
    if "history" not in session:
        session["history"] = []

    if request.method == 'POST':
        if "pizza_id" in request.form:
            try:
                pizza_id = int(request.form.get("pizza_id"))
                size = request.form.get("size")
                session["order"].append({"id": pizza_id, "size": size})
                session.modified = True
            except Exception:
                pass
        else:
            session["client"] = {
                "name": request.form.get("name"),
                "phone": request.form.get("phone"),
                "email": request.form.get("email"),
                "address": request.form.get("address"),
                "method": request.form.get("method"),
                "date": request.form.get("date"),
                "time": request.form.get("time")
            }
            session.modified = True

    html = STYLE
    html += "<h1>üçï Zam√≥w pizzƒô</h1>"

    if not session.get("completed"):
        html += "<form method='POST' class='form'>"
        html += "<label for='pizza_id'>Wybierz pizzƒô:</label><br>"
        html += "<select name='pizza_id' id='pizza_id'>"
        for pizza in menu:
            html += f"<option value='{pizza['id']}'>{pizza['name']} ({', '.join(pizza['ingredients'])})</option>"
        html += "</select><br><br>"

        html += "<label for='size'>Wybierz rozmiar:</label><br>"
        for size_key, info in sizes.items():
            html += (
                f"<input type='radio' name='size' value='{size_key}' required> "
                f"{size_key.capitalize()} ({info['cm']} cm ‚Äì {info['base_price']} z≈Ç + sk≈Çadniki)<br>"
            )
        html += "<br><button type='submit' class='button'>Dodaj do zam√≥wienia</button>"
        html += "</form>"

    html += "<div class='order'><h2>üßæ Twoje zam√≥wienie</h2>"
    if not session["order"]:
        html += "<p>Brak pozycji w zam√≥wieniu.</p>"
    else:
        total = 0
        html += "<ul>"
        for item in session["order"]:
            pizza_id = item["id"]
            size = item["size"]
            pizza = next((p for p in menu if p["id"] == pizza_id), None)
            if not pizza:
                continue
            price = calculate_price(pizza, size)
            size_cm = sizes[size]["cm"]
            total += price
            html += (
                f"<li><strong>{pizza['name']}</strong> ‚Äì {size} ({size_cm} cm) ‚Äì {price} z≈Ç<br>"
                f"Sk≈Çadniki: {', '.join(pizza['ingredients'])}</li><br>"
            )
        html += "</ul>"
        html += f"<p><strong>Suma do zap≈Çaty:</strong> {total} z≈Ç</p>"

        if not session.get("completed"):
            html += "<h2>üì± Dane kontaktowe</h2>"
            html += "<form method='POST'>"
            html += "Imiƒô i nazwisko:<br><input name='name' required><br>"
            html += "Telefon:<br><input name='phone' required><br>"
            html += "E-mail:<br><input name='email'><br>"
            html += "Adres (je≈õli dostawa):<br><input name='address'><br><br>"
            html += "Metoda:<br>"
            html += "<input type='radio' name='method' value='Dostawa' required> Dostawa<br>"
            html += "<input type='radio' name='method' value='Odbi√≥r osobisty' required> Odbi√≥r osobisty<br><br>"
            html += "üóì Data:<br><input type='date' name='date' required><br>"
            html += "üïí Godzina:<br><input type='time' name='time' required><br><br>"
            html += "<button type='submit' class='button'>Zapisz dane</button>"
            html += "</form>"

        if session["client"]:
            c = session["client"]
            html += "<h3>üìå Podsumowanie:</h3>"
            html += f"<p><strong>{c['name']}</strong><br>"
            html += f"üìû {c['phone']}<br>"
            html += f"üìß {c['email']}<br>"
            html += f"üìç {c['address']}<br>"
            html += f"üöö Spos√≥b: {c['method']}<br>"
            html += f"üóì {c['date']} ‚Äì üïí {c['time']}</p>"

        if not session.get("completed"):
            html += "<a href='/clear' class='button'>üóëÔ∏è Wyczy≈õƒá</a><br><br>"
            html += "<a href='/complete' class='button'>‚úÖ Zam√≥wienie zrealizowane</a>"
        else:
            html += "<p><strong>‚úÖ Zam√≥wienie zosta≈Ço zrealizowane.</strong></p>"
            html += "<a href='/restart' class='button'>üîÑ Z≈Ç√≥≈º kolejne zam√≥wienie</a>"
    html += "</div>"

    if session.get("history"):
        html += "<div class='order'><h2>üìú Historia zam√≥wie≈Ñ</h2>"
        for idx, entry in enumerate(reversed(session["history"]), 1):
            order = entry["order"]
            client = entry["client"]
            html += f"<h3>üßæ Zam√≥wienie #{idx}</h3><ul>"
            total = 0
            for item in order:
                pizza_id = item["id"]
                size = item["size"]
                pizza = next((p for p in menu if p["id"] == pizza_id), None)
                if pizza:
                    price = calculate_price(pizza, size)
                    size_cm = sizes[size]["cm"]
                    total += price
                    html += f"<li>{pizza['name']} ‚Äì {size} ({size_cm} cm) ‚Äì {price} z≈Ç</li>"
            html += "</ul>"
            html += f"<p><strong>Suma:</strong> {total} z≈Ç<br>"
            html += f"{client['name']} ({client['phone']}) ‚Äì {client['method']} {client['date']} {client['time']}</p><hr>"
        html += "</div>"

    return html

@app.route('/clear')
def clear():
    session.pop("order", None)
    session.pop("client", None)
    session.pop("completed", None)
    return redirect(url_for('index'))

@app.route('/complete')
def complete():
    if "order" in session and "client" in session:
        session["history"].append({
            "order": session["order"],
            "client": session["client"]
        })
        session.modified = True
    session["completed"] = True
    return redirect(url_for("index"))

@app.route('/restart')
def restart():
    session.pop("order", None)
    session.pop("client", None)
    session.pop("completed", None)
    return redirect(url_for("index"))

if __name__ == '__main__':
    app.run(debug=True)
